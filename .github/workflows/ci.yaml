name: Docker CI

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Create Buildx builder
        run: docker buildx create --name mybuilder --use

      - name: Build and load debian-llvm Docker image
        run: |
          docker buildx build --builder mybuilder --file ./docker/debian-llvm/Dockerfile --cache-from=type=local,src=/tmp/.buildx-cache --cache-to=type=local,dest=/tmp/.buildx-cache-new --output=type=docker --load -t debian-llvm:latest ./docker/debian-llvm

      - name: Test debian-llvm Docker image
        run: docker run --rm debian-llvm:latest /bin/bash -c "echo 'Docker image built and tested successfully.'"

      - name: Tag debian-llvm Docker image locally
        run: docker tag debian-llvm:latest myrepo/debian-llvm:latest

      - name: Save new Docker cache
        if: always()
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Build the debian-cedilla image using debian-llvm
        run: |
          docker build --file ./docker/debian-cedilla/Dockerfile --build-arg BASE_IMAGE=myrepo/debian-llvm:latest -t debian-cedilla:latest ./docker/debian-cedilla

      - name: Test debian-cedilla Docker image
        run: docker run --rm debian-cedilla:latest /bin/bash -c "echo 'Another Docker image built and tested successfully.'"

      - name: Save new Docker cache again
        if: always()
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
