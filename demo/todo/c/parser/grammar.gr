
-> Program;
-> Block;
-> Expression;

Block {
	Expressions;
}

Expression {
	FuncCall
}

Program {
	FuncDef
}

FuncDef {
	capture Type;
	capture Identifier;
}

FuncCall {
	capture Identifier;
	capture Expression;
	skip	Raw["value"=";"];
}

Program | Block {

	(

		capture Identifier as Type;

		var:
			capture Identifier as Name;
			(
				skip	Symbol ["value" = "="];
				capture Expr;
			)?;
		(
			skip	Symbol ["value" = ","];
			var;
		)*;

		skip	Symbol ["value" = ";"];

	) -> VarDecl;

};
